# Default values for blockscout-stack.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

## Provide a name in place of blockscout-stack for `app:` labels
##
nameOverride: 'blockscout'
## Provide a name to substitute for the full names of resources
##
fullnameOverride: 'blockscout'
## Reference to one or more secrets to be used when pulling images
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
##
imagePullSecrets: []
## Blockscout configuration options
##
config:
  network:
    id: 11155111
    name: Sepolia
    shortname: Sepolia
    currency:
      name: Ether
      symbol: ETH
      decimals: 18
      # if network uses dual token model like gnosis (in most case it should be set to false)
      dualToken: false
  account:
    enabled: false
  testnet: true
  nameService:
    enabled: false
    url: ''

  ## If set to true will create service monitors for blockscout and stats
  ##
  prometheus:
    enabled: true
    ## Whitelist metrics path on ingress to make metrics non-public
    ingressWhitelist:
      enabled: true
      annotations:
        nginx.ingress.kubernetes.io/whitelist-source-range: '10.0.0.0/8,172.16.0.0/12,192.168.0.0/16'
## Configuration options for backend
##
blockscout:
  enabled: true
  ## Replica count for indexer (if separate api is not used this replica count for deployment containing both indexer and api). Currently only one replica is supported
  ##
  replicaCount: 1
  ## Image parametes
  ##
  image:
    repository: blockscout/blockscout
    pullPolicy: IfNotPresent
    tag: 'latest'
  ## Init container configuration (used to run DB migrations)
  ##
  init:
    enabled: true
    command:
      - /bin/sh
    args:
      - -c
      - bin/blockscout eval "Elixir.Explorer.ReleaseTasks.create_and_migrate()"
  ## Run API service as separate deployment
  ##
  separateApi:
    enabled: false
    replicaCount: 2
    resources:
      limits:
        cpu: 1
        memory: 2Gi
      requests:
        cpu: 500m
        memory: 1Gi
  ## Blockscout ENV vars
  ## ref: https://docs.blockscout.com/setup/env-variables
  ##
  env:
    []
    # NAME: VALUE
  # Refer to an existing Secret/ConfigMap
  extraEnv:
    []
    # - name: DATABASE_URL
    #   valueFrom:
    #     secretKeyRef:
    #       name: blockscout-blockscout-env
    #       key: DATABASE_URL
  ## Set ENV vars via secret, this can be useful for DB connection params, api keys, etc.
  ##
  # This will create a Secret with the specified data
  envFromSecret:
    DATABASE_URL: 'postgresql://<user>:<password>@<db_endpoint>:5432/<database_name>'
    # NAME: VALUE
  # Refer to an existing Secret/ConfigMap
  envFrom:
    []
    # - secretRef:
    #     name: blockscout-secret
    # - configMapRef:
    #     name: blockscout-config
  ## Command to start blockscout instance
  ##
  command:
    - /bin/sh
  args:
    - -c
    - bin/blockscout start
  ## Annotations to add to blockscout pod
  podAnnotations: {}

  podSecurityContext: {}
  ## SecurityContext holds pod-level security attributes and common container settings.
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
  ##
  securityContext: {}
  terminationGracePeriodSeconds: 300
  ## Liveness probe
  ##
  livenessProbe:
    enabled: true
    path: /api/v1/health/liveness
    params:
      initialDelaySeconds: 100
      periodSeconds: 100
      timeoutSeconds: 30
  ## Readiness probe
  ##
  readinessProbe:
    enabled: true
    path: /api/v1/health/readiness
    params:
      initialDelaySeconds: 60
      periodSeconds: 10
      timeoutSeconds: 60

  service:
    type: ClusterIP
    port: 80
  ## Configure ingress resource that allow you to access the blockscout installation.
  ## ref: http://kubernetes.io/docs/user-guide/ingress/
  ##
  ingress:
    enabled: true
    className: nginx
    annotations:
      kubernetes.io/ingress.class: nginx
    hostname: eth-sepolia.blockscout.local
    tls:
      enabled: false
      #secretName:
    paths:
      - path: /api
        pathType: Prefix
      - path: /socket
        pathType: Prefix
      - path: /sitemap.xml
        pathType: Prefix
      - path: /public-metrics
        pathType: Prefix
      - path: /auth/auth0
        pathType: Exact
      - path: /auth/auth0/callback
        pathType: Exact
      - path: /auth/logout
        pathType: Exact

  resources:
    limits:
      cpu: 2
      memory: 4Gi
    requests:
      cpu: 1
      memory: 2Gi
  # Additional volumes on the output Blockscout Deployment definition.
  volumes: []
  # - name: foo
  #   secret:
  #     secretName: mysecret
  #     optional: false

  # Additional volumeMounts on the output Blockscout Deployment definition.
  volumeMounts: []
  # - name: foo
  #   mountPath: "/etc/foo"
  #   readOnly: true
## Configuration options for frontend
##
frontend:
  enabled: true
  ## Image parametes
  image:
    repository: ghcr.io/blockscout/frontend
    tag: latest
    pullPolicy: IfNotPresent

  replicaCount: 2
  ## Annotations to add to frontend pod
  ##
  podAnnotations: {}

  podSecurityContext: {}
  ## SecurityContext holds pod-level security attributes and common container settings.
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
  ##
  securityContext: {}

  service:
    type: ClusterIP
    port: 80
  ## Configure ingress resource that allow you to access the frontend installation.
  ## ref: http://kubernetes.io/docs/user-guide/ingress/
  ##
  ingress:
    enabled: true
    className: nginx
    annotations:
      kubernetes.io/ingress.class: nginx
    hostname: eth-sepolia.blockscout.local
    tls:
      enabled: false
      #secretName:
    paths:
      - path: /

  resources:
    limits:
      memory: '1Gi'
      cpu: '500m'
    requests:
      memory: '256Mi'
      cpu: '250m'
  ## Liveness probe
  ##
  livenessProbe:
    enabled: true
    path: /api/healthz
    params:
      initialDelaySeconds: 100
      periodSeconds: 100
      timeoutSeconds: 30
  ## Readiness probe
  ##
  readinessProbe:
    enabled: true
    path: /api/healthz
    params:
      initialDelaySeconds: 30
      periodSeconds: 10
      timeoutSeconds: 30
  ## Frontend ENV vars
  ## ref: https://github.com/blockscout/frontend/blob/main/docs/ENVS.md
  ##
  env:
    # NEXT_PUBLIC_AD_ADBUTLER_CONFIG_DESKTOP:
    #   id: '632019'
    #   width: '728'
    #   height: '90'
    # NEXT_PUBLIC_AD_ADBUTLER_CONFIG_MOBILE:
    #   id: '632018'
    #   width: '320'
    #   height: '100'
    # NEXT_PUBLIC_ADMIN_SERVICE_API_HOST: https://admin-rs.services.blockscout.com
    NEXT_PUBLIC_API_BASE_PATH: /
    NEXT_PUBLIC_API_HOST: eth-sepolia.blockscout.local
    NEXT_PUBLIC_API_SPEC_URL: https://raw.githubusercontent.com/blockscout/blockscout-api-v2-swagger/main/swagger.yaml
    # NEXT_PUBLIC_CONTRACT_CODE_IDES:
    #   - title: 'Remix IDE'
    #     url: 'https://remix.ethereum.org/?address={hash}&blockscout={domain}'
    #     icon_url: 'https://raw.githubusercontent.com/blockscout/frontend-configs/main/configs/ide-icons/remix.png'
    NEXT_PUBLIC_CONTRACT_INFO_API_HOST: ttps://contracts-info.services.blockscout.com
    NEXT_PUBLIC_DATA_AVAILABILITY_ENABLED: true
    # NEXT_PUBLIC_DEFI_DROPDOWN_ITEMS:
    #   - text: 'Swap'
    #     icon: 'swap'
    #     dappId: 'cow-swap'
    #   - text: 'Payment link'
    #     icon: 'payment_link'
    #     dappId: 'peanut-protocol'
    NEXT_PUBLIC_FEATURED_NETWORKS: https://raw.githubusercontent.com/blockscout/frontend-configs/main/configs/featured-networks/eth-sepolia.json
    NEXT_PUBLIC_FOOTER_LINKS: https://raw.githubusercontent.com/blockscout/frontend-configs/main/configs/footer-links/sepolia.json
    NEXT_PUBLIC_GRAPHIQL_TRANSACTION: 0xbf69c7abc4fee283b59a9633dadfdaedde5c5ee0fba3e80a08b5b8a3acbd4363
    NEXT_PUBLIC_HAS_BEACON_CHAIN: true
    NEXT_PUBLIC_HAS_USER_OPS: true
    # NEXT_PUBLIC_HOMEPAGE_CHARTS:
    #   - daily_txs
    # NEXT_PUBLIC_HOMEPAGE_HERO_BANNER_CONFIG: { 'background': ['rgba(51, 53, 67, 1)'], 'text_color': ['rgba(165, 252, 122, 1)'] }
    NEXT_PUBLIC_IS_ACCOUNT_SUPPORTED: true
    NEXT_PUBLIC_IS_TESTNET: true
    # NEXT_PUBLIC_LOGOUT_URL: https://blockscout-goerli.us.auth0.com/v2/logout
    NEXT_PUBLIC_MAINTENANCE_ALERT_MESSAGE: <p>Participated in our recent Blockscout activities? <a href="https://badges.blockscout.com?utm_source=instance&utm_medium=sepolia" target="_blank">Check your eligibility</a> and claim your NFT Scout badges. More exciting things are coming soon!</p>
    NEXT_PUBLIC_MARKETPLACE_BANNER_CONTENT_URL: https://gist.githubusercontent.com/maikReal/974c47f86a3158c1a86b092ae2f044b3/raw/abcc7e02150cd85d4974503a0357162c0a2c35a9/merits-banner.html
    NEXT_PUBLIC_MARKETPLACE_BANNER_LINK_URL: https://swap.blockscout.com?utm_source=blockscout&utm_medium=eth-sepolia
    NEXT_PUBLIC_MARKETPLACE_CATEGORIES_URL: https://raw.githubusercontent.com/blockscout/frontend-configs/main/configs/marketplace-categories/default.json
    NEXT_PUBLIC_MARKETPLACE_ENABLED: true
    NEXT_PUBLIC_MARKETPLACE_RATING_AIRTABLE_API_KEY: patbqG4V2CI998jAq.9810c58c9de973ba2650621c94559088cbdfa1a914498e385621ed035d33c0d0
    NEXT_PUBLIC_MARKETPLACE_RATING_AIRTABLE_BASE_ID: appGkvtmKI7fXE4Vs
    NEXT_PUBLIC_MARKETPLACE_SECURITY_REPORTS_URL: https://raw.githubusercontent.com/blockscout/frontend-configs/main/configs/marketplace-security-reports/default.json
    NEXT_PUBLIC_MARKETPLACE_SUBMIT_FORM: https://airtable.com/appiy5yijZpMMSKjT/shr6uMGPKjj1DK7NL
    NEXT_PUBLIC_MARKETPLACE_SUGGEST_IDEAS_FORM: https://airtable.com/appiy5yijZpMMSKjT/pag3t82DUCyhGRZZO/form
    NEXT_PUBLIC_METADATA_SERVICE_API_HOST: https://metadata.services.blockscout.com
    NEXT_PUBLIC_METASUITES_ENABLED: true
    # NEXT_PUBLIC_MULTICHAIN_BALANCE_PROVIDER_CONFIG:
    #   - name: 'zerion'
    #     url_template: 'https://app.zerion.io/{address}/overview'
    #     logo: 'https://raw.githubusercontent.com/blockscout/frontend-configs/main/configs/marketplace-logos/zerion.svg'
    #   - name: 'zapper'
    #     url_template: 'https://zapper.xyz/account/{address}'
    #     logo: 'https://blockscout-content.s3.amazonaws.com/zapper-icon.png'
    NEXT_PUBLIC_NAME_SERVICE_API_HOST: https://bens.services.blockscout.com
    # NEXT_PUBLIC_NAVIGATION_HIGHLIGHTED_ROUTES:
    #   - /apps
    NEXT_PUBLIC_NAVIGATION_LAYOUT: horizontal
    NEXT_PUBLIC_NETWORK_CURRENCY_DECIMALS: 18
    NEXT_PUBLIC_NETWORK_CURRENCY_NAME: Ether
    NEXT_PUBLIC_NETWORK_CURRENCY_SYMBOL: ETH
    # NEXT_PUBLIC_NETWORK_EXPLORERS:
    #   - title: 'GeckoTerminal'
    #     logo: 'https://raw.githubusercontent.com/blockscout/frontend-configs/main/configs/explorer-logos/geckoterminal.png'
    #     baseUrl: 'https://www.geckoterminal.com/'
    #     paths:
    #       token: '/sepolia-testnet/pools'
    #   - title: 'Etherscan'
    #     logo: 'https://raw.githubusercontent.com/blockscout/frontend-configs/main/configs/explorer-logos/etherscan.png'
    #     baseUrl: 'https://sepolia.etherscan.io/'
    #     paths:
    #       tx: '/tx'
    #       address: '/address'
    #       token: '/token'
    #       block: '/block'
    #   - title: 'Tenderly'
    #     logo: 'https://raw.githubusercontent.com/blockscout/frontend-configs/main/configs/explorer-logos/tenderly.png'
    #     baseUrl: 'https://dashboard.tenderly.co'
    #     paths:
    #       tx: '/tx/sepolia'
    NEXT_PUBLIC_NETWORK_ICON: https://raw.githubusercontent.com/blockscout/frontend-configs/main/configs/network-icons/sepolia.png
    NEXT_PUBLIC_NETWORK_ICON_DARK: https://raw.githubusercontent.com/blockscout/frontend-configs/main/configs/network-icons/sepolia.png
    NEXT_PUBLIC_NETWORK_ID: 11155111
    NEXT_PUBLIC_NETWORK_LOGO: https://raw.githubusercontent.com/blockscout/frontend-configs/main/configs/network-logos/sepolia.svg
    NEXT_PUBLIC_NETWORK_LOGO_DARK: https://raw.githubusercontent.com/blockscout/frontend-configs/main/configs/network-logos/sepolia.svg
    NEXT_PUBLIC_NETWORK_NAME: Sepolia
    NEXT_PUBLIC_NETWORK_RPC_URL: https://eth-sepolia.public.blastapi.io
    NEXT_PUBLIC_NETWORK_SHORT_NAME: Sepolia
    NEXT_PUBLIC_NETWORK_VERIFICATION_TYPE: validation
    NEXT_PUBLIC_OG_ENHANCED_DATA_ENABLED: true
    NEXT_PUBLIC_OG_IMAGE_URL: https://raw.githubusercontent.com/blockscout/frontend-configs/main/configs/og-images/sepolia-testnet.png
    # NEXT_PUBLIC_OTHER_LINKS:
    #   - url: 'https://sepolia.drpc.org?ref=559183'
    #     text: 'Public RPC'
    NEXT_PUBLIC_REWARDS_SERVICE_API_HOST: https://merits.blockscout.com
    NEXT_PUBLIC_SAFE_TX_SERVICE_URL: https://safe-transaction-sepolia.safe.global
    NEXT_PUBLIC_STATS_API_HOST: https://stats-sepolia.k8s.blockscout.com
    NEXT_PUBLIC_TRANSACTION_INTERPRETATION_PROVIDER: noves
    NEXT_PUBLIC_VIEWS_CONTRACT_SOLIDITYSCAN_ENABLED: true
    NEXT_PUBLIC_VISUALIZE_API_HOST: https://visualizer.services.blockscout.com
    NEXT_PUBLIC_XSTAR_SCORE_URL: https://docs.xname.app/the-solution-adaptive-proof-of-humanity-on-blockchain/xhs-scoring-algorithm?utm_source=blockscout&utm_medium=address
    # NAME: VALUE
  # Refer to an existing Secret/ConfigMap
  extraEnv:
    []
    # - name: FAVICON_GENERATOR_API_KEY
    #   valueFrom:
    #     secretKeyRef:
    #       name: blockscout-frontend-secret
    #       key: FAVICON_GENERATOR_API_KEY
  # This will create a Secret with the specified data
  envFromSecret:
    []
    # NAME: VALUE
  # Refer to an existing Secret/ConfigMap
  envFrom:
    []
    # - secretRef:
    #     name: blockscout-frontend-secret
    # - configMapRef:
    #     name: blockscout-frontend-config

stats:
  enabled: false
  ## Image parametes
  ##
  image:
    repository: ghcr.io/blockscout/stats
    tag: latest
    pullPolicy: IfNotPresent

  replicaCount: 1
  service:
    type: ClusterIP
    port: 80
    metricsPort: 6060

  podAnnotations: {}

  podSecurityContext: {}

  securityContext: {}

  ## Configure ingress resource that allow you to access the stats installation.
  ## ref: http://kubernetes.io/docs/user-guide/ingress/
  ##
  ingress:
    enabled: false
    className: ''
    annotations: {}
    hostname: chart-example-stats.local
    tls:
      enabled: false
      #secretName:
    paths:
      - path: /
        pathType: Prefix

  resources:
    limits:
      memory: '512Mi'
      cpu: 250m
    requests:
      memory: 512Mi
      cpu: 250m
  ## Files to mount to stats pod
  ##
  files:
    enabled: false
    list:
      {}
      # file.txt: |
      #   test
    mountPath: /tmp/path

  ## Liveness probe
  ##
  livenessProbe:
    enabled: true
    path: /health
    params:
      initialDelaySeconds: 100
      periodSeconds: 100
      timeoutSeconds: 30
  ## Readiness probe
  ##
  readinessProbe:
    enabled: true
    path: /health
    params:
      initialDelaySeconds: 60
      periodSeconds: 10
      timeoutSeconds: 60
  ## Stats ENV vars
  ## ref: https://github.com/blockscout/blockscout-rs/tree/main/stats#env
  env:
    []
    # NAME: VALUE
  envFromSecret:
    []
    # NAME: VALUE
  extraEnv:
    []
    # - name: STATS__DB_URL
    #   valueFrom:
    #     secretKeyRef:
    #       name: blockscout-stats-secret
    #       key: STATS__DB_URL

userOpsIndexer:
  enabled:
    false
    ## Image parametes
  ##
  image:
    repository: ghcr.io/blockscout/user-ops-indexer
    tag: latest
    pullPolicy: IfNotPresent

  replicaCount: 1
  service:
    type: ClusterIP
    port: 80
    grpc:
      enabled: true
      port: 8051
    metricsPort: 6060

  podAnnotations: {}

  podSecurityContext: {}

  securityContext: {}

  ## Configure ingress resource that allow you to access the stats installation.
  ## ref: http://kubernetes.io/docs/user-guide/ingress/
  ##
  ingress:
    enabled: false
    className: ''
    annotations: {}
    hostname: chart-example-stats.local
    tls:
      enabled: false
      #secretName:
    paths:
      - path: /
        pathType: Prefix

  resources:
    limits:
      memory: '512Mi'
      cpu: 250m
    requests:
      memory: 512Mi
      cpu: 250m

  ## Liveness probe
  ##
  livenessProbe:
    enabled: false
    path: /health
    params:
      initialDelaySeconds: 100
      periodSeconds: 100
      timeoutSeconds: 30
  ## Readiness probe
  ##
  readinessProbe:
    enabled: false
    path: /health
    params:
      initialDelaySeconds: 60
      periodSeconds: 10
      timeoutSeconds: 60
  ## Stats ENV vars
  ## ref: https://github.com/blockscout/blockscout-rs/tree/main/stats#env
  env:
    []
    # NAME: VALUE
  envFromSecret:
    []
    # NAME: VALUE
  extraEnv:
    []
    # - name: USER_OPS_INDEXER__DATABASE__CONNECT__URL
    #   valueFrom:
    #     secretKeyRef:
    #       name: blockscout-userops-indexer-secret
    #       key: USER_OPS_INDEXER__DATABASE__CONNECT__URL

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ''
## Node labels for blockscout-stack pod assignment
## Ref: https://kubernetes.io/docs/user-guide/node-selection/
##
nodeSelector: {}

tolerations: []

## Affinity for pod assignment
## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
##
affinity: {}
